name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  tests:
    strategy:
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: Swatinem/rust-cache@v2

      - name: Clippy all-features
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

      - name: RustFmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

      - name: Cargo Doc
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --lib --no-deps --all-features

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Miri
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: miri

      # Separate miri setup from run so that 'Miri Test'
      # logs are clean.
      - name: Setup Miri
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup

      - name: Miri Test
        uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --all-features
